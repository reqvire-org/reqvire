Found 7 file(s) with formatting changes:

üìÑ MOEs.md
  01     # Measures of Effectiveness
  02
  03     ## User Adoption
  04 -   ---
  05
  06     ### MOE_UA
  07 +   ‚ê§
  08     User adoption measure.
  09
  10     #### Metadata
  11       * type: user-requirement
  12 +   ---
  13
  14     ## Cost Effectiveness
  15 -   ---
  16
  17     ### MOE_CE
  18 +   ‚ê§
  19     Cost effectiveness measure.
  20
  21     #### Metadata
  22       * type: user-requirement
  23 +   ---
  24 +   ‚ê§



üìÑ SystemRequirements/Requirements.md
  01     # System Requirements
  02
  03     ## Processing
  04
  05     ### Requirements Processing
  06 +   ‚ê§
  07     The system shall parse the files in all folders and subfolders from the root of git repository.
  08 -   #### Metadata
  08 -     * type: requirement
  08 -   ‚ê§
  11     #### Relations
  12 -     * derivedFrom: ../UserStories.md#managing-mbse-models
  12 -     * satisfiedBy: ../core/src/model.rs
  14 +     * derivedFrom: [Managing MBSE Models](../UserStories.md#managing-mbse-models)
  15 +     * satisfiedBy: [model.rs](../core/src/model.rs)
  16 +   ---
  17
  18     ### Validation Framework
  19
  20     The system shall implement a two-pass validation architecture for comprehensive error detection.
  21 -   #### Metadata
  21 -     * type: requirement
  21 -   ‚ê§
  24     #### Relations
  25 -     * derivedFrom: #requirements-processing
  25 -     * satisfiedBy: ../core/src/graph_registry.rs
  25 -   ‚ê§
  28 +     * derivedFrom: [Requirements Processing](#requirements-processing)
  29 +     * satisfiedBy: [graph_registry.rs](../core/src/graph_registry.rs)
  30     ---
  31
  32     ### Path Resolution Testing
  33
  34     This requirement tests various absolute path conversions from a subfolder.
  35 -   #### Metadata
  35 -     * type: requirement
  37 +   #### Relations
  38 +     * derivedFrom: [Managing MBSE Models](../UserStories.md#managing-mbse-models)
  39 +     * trace: [MOE_UA](../MOEs.md#moe_ua)
  40 +     * verifiedBy: [Format Test](../Verifications/Tests.md#format-test)
  41 +     * satisfiedBy: [parser.rs](../core/src/parser.rs)
  42 +   ---
  43
  44 -   #### Relations
  44 -     * derivedFrom: [../UserStories.md#managing-mbse-models](/UserStories.md#managing-mbse-models)
  44 -     * trace: [../MOEs.md#moe_ua](/MOEs.md#moe_ua)
  44 -     * verifiedBy: [../Verifications/Tests.md#format-test](/Verifications/Tests.md#format-test)
  44 -     * satisfiedBy: /core/src/parser.rs



üìÑ TestNoHeaders.md
  01 +   # TestNoHeaders
  02 +   ‚ê§
  03 +   ## Requirements
  04 +   ‚ê§
  05     ### Element Without Section
  06
  07     This element has no page header and no section header.




üìÑ TestNoPageHeader.md
  01 +   # TestNoPageHeader
  02 +   ‚ê§
  03     ## Test Section
  04
  05     ### Element Alpha




üìÑ TestNoSectionHeader.md
  01     # TestNoSectionHeader
  02 +   ## Requirements
  03 +   ‚ê§
  04     ### Element One
  05
  06     This file has page header but no section header.




üìÑ UserStories.md
  01     # User Stories
  02
  03     ## Personas
  04 +   ‚ê§
  05 +   ‚ê§
  06     1. System Engineer: Focused on managing system models, ensuring alignment with project requirements, and validating structures.
  07     2. SOI Developer: Implements features and makes system changes based on MBSE models, ensuring consistency between design and code.
  08     3. Contributor: An external community member contributing to Reqvire by improving models, creating features, or providing feedback.
  09     4. Manager: Oversees the MBSE processes, tracks progress, ensures alignment with objectives, and generates reports for decision-making.
  10 -   ‚ê§
  11     ## User Stories
  12
  13     ### Managing MBSE Models

  18       * type: user-requirement
  19
  20     #### Relations
  21 -     * trace: [MOEs.md#moe_ua](/MOEs.md#moe_ua)
  21 -   * derive: [SystemRequirements/Requirements.md#requirements-processing](/SystemRequirements/Requirements.md#requirements-processing)
  23 +     * trace: [MOE_UA](MOEs.md#moe_ua)
  24 +     * derive: [Requirements Processing](SystemRequirements/Requirements.md#requirements-processing)
  25 +   ---
  26
  27     ### Generate Diagrams
  28 +   ‚ê§
  29     As a **System Engineer**, I want to generate diagrams for different system viewpoints, so that I can communicate system architecture effectively and understand dependencies and impacts across the system.
  30
  31     #### Metadata
  32       * type: user-requirement
  33
  34     #### Relations
  35 -     * trace: [MOEs.md#moe_ua](/MOEs.md#moe_ua)
  35 -   ‚ê§
  37 +     * trace: [MOE_UA](MOEs.md#moe_ua)
  38     ---
  39
  40     ### Missing Blank Line Test
  41 +   ‚ê§
  42     This element has content but no blank line before metadata.
  43 +   ‚ê§
  44     #### Metadata
  45       * type: user-requirement
  46 -   ‚ê§
  47     ---
  48
  49     ### Metadata Repositioning Test
  50
  51     Verify that metadata repositioning maintains blank line spacing.
  52 -   #### Metadata
  52 -     * type: verification
  52 -     * status: implemented
  52 -   ‚ê§
  56     #### Details
  57 -   ‚ê§
  58     This test verifies that when metadata is repositioned from early position to end position, a blank line is properly added before the metadata section.
  59
  60     ##### Acceptance Criteria
  61 -   ‚ê§
  62       * [ ] Metadata is moved to end position
  63       * [ ] Blank line exists before metadata after repositioning
  64       * [ ] Content structure is preserved
  65 +   #### Metadata
  66 +     * type: test-verification
  67 +     * status: implemented
  68     ---
  69
  70     ### Details Block Formatting Test

  78     ####Another Header Without Space
  79     More content that should remain untouched.
  80     </details>
  81 +   ‚ê§
  82     #### Metadata
  83       * type: user-requirement
  84 -   ‚ê§
  85     ---
  86
  87     ### Exact Blank Line Count Test

  90     Content line 1.
  91     Content line 2.
  92     Content line 3.
  93 -   #### Metadata
  93 -     * type: verification
  93 -     * status: implemented
  96 +   ‚ê§
  97     #### Details
  98     Detail content here.
  99 +   #### Metadata
  100 +     * type: test-verification
  101 +     * status: implemented
  102     ---



üìÑ Verifications/Tests.md
  01     # Verification Tests
  02
  03     This document contains various test cases.
  04
  05     ## Test Categories
  06 +   ‚ê§
  07 +   ‚ê§
  08     Some introduction text here.
  09 +   ---
  10 +   ‚ê§
  11     ### Format Test
  12 +   ‚ê§
  13     This test verifies formatting capabilities.
  14
  15     #### Metadata
  16 -     * type: verification
  17 +     * type: test-verification
  18
  19     #### Relations
  20 -     * verify: ../SystemRequirements/Requirements.md#requirements-processing
  20 -     * satisfiedBy: ../tests/test-format/test.sh
  22 +     * verify: [Requirements Processing](../SystemRequirements/Requirements.md#requirements-processing)
  23 +     * satisfiedBy: [test.sh](../tests/test-format/test.sh)
  24 +   ---
  25
  26     ### Validation Test
  27
  28     This test verifies validation capabilities.
  29
  30     #### Metadata
  31 -     * type: verification
  32 +     * type: test-verification
  33
  34     #### Relations
  35 -     * verify: ../SystemRequirements/Requirements.md#validation-framework
  35 -   ‚ê§
  37 +     * verify: [Validation Framework](../SystemRequirements/Requirements.md#validation-framework)
  38     ---
  39
  40     ### Absolute Path Verification

  42     This verification uses absolute paths to rs files.
  43
  44     #### Metadata
  45 -     * type: verification
  46 +     * type: test-verification
  47
  48     #### Relations
  49 -     * verify: [../SystemRequirements/Requirements.md#path-resolution-testing](/SystemRequirements/Requirements.md#path-resolution-testing)
  49 -     * satisfiedBy: /core/src/element.rs
  51 +     * verify: [Path Resolution Testing](../SystemRequirements/Requirements.md#path-resolution-testing)
  52 +     * satisfiedBy: [element.rs](../core/src/element.rs)
  53 +   ---
  54



Run without --dry-run to apply these changes.
